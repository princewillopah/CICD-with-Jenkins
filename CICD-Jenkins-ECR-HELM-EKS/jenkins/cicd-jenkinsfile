pipeline {
    agent { label 'xyz-jenkins-slave-node' }
    environment {
        TAG_VERSION = '4.0.0'
        REGISTRY_PATH = '456555753493.dkr.ecr.eu-north-1.amazonaws.com'
        ECR_REPO_FULL_NAME = '456555753493.dkr.ecr.eu-north-1.amazonaws.com/xyz-app-ecr'
        WAR_FULL_PATH = '/home/ubuntu/workspace/project-app/target/project-app.war'
        TMP_IMAGE_NAME = 'project-app'
        ECR_REPO_NAME = 'project-ecr-repo'
        REGION = 'eu-north-1'
    }
    stages {
          stage("Maven Build") {
            steps {
                // sh 'mvn clean install'
                  dir('/home/ubuntu/workspace/CICD-Jenkins-ECR-HELM-EKS') {
                    sh 'mvn clean install'
                }
            }
          }
          stage('Docker Build') {
            steps {
              sh '''
              cp ${WAR_FULL_PATH} .
              docker build -t ${TMP_IMAGE_NAME}:${TAG_VERSION} .
              '''
            }
          }
          stage('Docker Tag and Push to ECR') {
            steps {
              sh '''
              aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${REGISTRY_PATH}
              export IMAGE_ID=$(sudo docker images --filter=reference=${TMP_IMAGE_NAME} --format "{{.ID}}")
              echo $IMAGE_ID
              docker tag ${IMAGE_ID} ${REGISTRY_PATH}/${ECR_REPO_NAME}:${TAG_VERSION}
              docker push ${ECR_REPO_FULL_NAME}:${TAG_VERSION}
              '''
            }
          }
          stage('Helm Deploy') {
            steps {
              sh '''
              cd helm-charts
              sed -i "s/replace_image_tag/${TAG_VERSION}/g" values.yaml
              helm upgrade --install project-app .
              kubectl get svc
              '''
            }
          }
    }
}